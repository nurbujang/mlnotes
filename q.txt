1. 
y.shape (6,) means?
y.ndim 1 means?
but x needs to be 2d array, why? always reshape x? x>1
whrn to know when to reshape x? and when not to reshape y?
predictions = w0 + np.dot(w1,X).reshape(1,-1) why reshape predictions?
regression is always y,pred?
check cars, diabetes

2
pg 6 - pred= predicted y?y
A=Z Cross validation example
try and stop at how many variables?
just pick variables randomly?
where to fit polynomial in cross validation?
diabetes: index not in column?

3
get ypredproba everytime after predictions?

notebook 3 survives/not?:
    split test train
    algo model
    fit with train
    get ytrainpredict, ytrainproba
    get xtrain, y train score

notebook 3 make predictions:
    get ytestpredict, ytestproba
    xtest, ytest score

Join new predictions and probabilities into original dataset
    ypredicted, ypredproba


4
cross-validation to find  best kfold value?
when to do feature scaling? - pick and choose?
make_pipeline, functiontransformer, minmaxscaler


feature processing:

model = make_pipeline(StandardScaler(), KNeighborsClassifier(n_neighbors=9))
model.fit(X_train, y_train)
print(model.score(X_test, y_test))

then kfold crossvalidation, to find the best k, with pipeline
for k in ks:
    fold = 0
    if k == 0:
        continue ##we can't have 0 neighbors so let's skip this one
    print(k)
        
    for train_index, val_index in kf.split(X_train):
        X_c, X_val = X_train[train_index], X_train[val_index]
        y_c, y_val = y_train[train_index], y_train[val_index]
        est = make_pipeline(
            StandardScaler(),
            KNeighborsClassifier(n_neighbors = k)
        )
        est.fit(X_c, y_c) # fit on the remaining train
        train_scores[k, fold] = est.score(X_c, y_c)
        valid_scores[k, fold] = est.score(X_val, y_val)
        fold += 1 

then final evaluation, with pipeline
model = make_pipeline(
    StandardScaler(),
    KNeighborsClassifier(n_neighbors=3)
)
model.fit(X_train, y_train) # X train is the entirety of the training set
print(model.score(X_test, y_test))

DO PIPELINE FOR EVERY STEP?